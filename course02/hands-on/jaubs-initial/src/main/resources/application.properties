spring.application.name=jaubs-scopes

# Server runs on this port
server.port=8080

# Use this pattern to show reduced log width
# logging.pattern.console= %d{HH:mm:ss} [%15thread] %msg%n

logging.level.web=TRACE
logging.level.org.springframework.web.client=TRACE

## KeyCloak specific OAuth 2 related properties (Incomplete)
spring.security.oauth2.client.registration.keycloak-oidc.provider=keycloak
spring.security.oauth2.client.registration.keycloak-oidc.client-name=jaubs
spring.security.oauth2.client.registration.keycloak-oidc.client-id=${KEYCLOAK_CLIENT_ID}
spring.security.oauth2.client.registration.keycloak-oidc.client-secret=${KEYCLOAK_CLIENT_SECRET}
spring.security.oauth2.client.registration.keycloak-oidc.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak-oidc.scope=openid,profile,email

## This represents the Keycloak Provider (issuer is enough for Spring Boot to know all endpoints)
## Openid configuration - http://127.0.0.1:9090/realms/jaubs/.well-known/openid-configuration
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://127.0.0.1:9090/realms/jaubs


## GitLab specific OAuth 2 related properties - (Just Oauth to use gitlab resource servers)
spring.security.oauth2.client.registration.gitlab-oauth.provider=gitlab
spring.security.oauth2.client.registration.gitlab-oauth.client-name=GitLab
spring.security.oauth2.client.registration.gitlab-oauth.client-id=${GITLAB_CLIENT_ID}
spring.security.oauth2.client.registration.gitlab-oauth.client-secret=${GITLAB_CLIENT_SECRET}
spring.security.oauth2.client.registration.gitlab-oauth.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.gitlab-oauth.scope=read_user,api,read_api

### You need to set the issuer (Not Strictly Required because it's already known to Spring Boot)
## Openid configuration - https://gitlab.com/.well-known/openid-configuration
spring.security.oauth2.client.provider.gitlab.issuer-uri=https://gitlab.com



## GitLab specific OAuth 2 related properties
#spring.security.oauth2.client.registration.gitlab-oidc.provider=gitlab
#spring.security.oauth2.client.registration.gitlab-oidc.client-name=GitLab
#spring.security.oauth2.client.registration.gitlab-oidc.client-id=${GITLAB_CLIENT_ID}
#spring.security.oauth2.client.registration.gitlab-oidc.client-secret=${GITLAB_CLIENT_SECRET}
#spring.security.oauth2.client.registration.gitlab-oidc.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.gitlab-oidc.scope=openid,profile,email

### You need to set the issuer (Not Strictly Required because it's already known to Spring Boot)
## Openid configuration - https://gitlab.com/.well-known/openid-configuration
#spring.security.oauth2.client.provider.gitlab.issuer-uri=https://gitlab.com


## Google specific OAuth 2 related properties
#spring.security.oauth2.client.registration.google-oidc.provider=google
#spring.security.oauth2.client.registration.google-oidc.client-name=Google
#spring.security.oauth2.client.registration.google-oidc.client-id=${GOOGLE_CLIENT_ID}
#spring.security.oauth2.client.registration.google-oidc.client-secret=${GOOGLE_CLIENT_SECRET}
#spring.security.oauth2.client.registration.google-oidc.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.google-oidc.scope=openid,profile,email

### You need to set the issuer (Not Strictly Required because it's already known to Spring Boot)
## Openid configuration - https://gitlab.com/.well-known/openid-configuration
#spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com


jaubs.api.url=http://localhost:8081/jaubsapi

gitlab.api.url=https://gitlab.com/api/v4